    _I should not walk the path for which the first priority is money._
    _I have to share knowledge among people._
    _It is about the freedom for knowledge and not price_

you may not need to sit in front of a computer always.
you have works deployed on the the internet and they are the services you give to the world.
you may try to improve those services
you may go to someone else house or to any places without a computer and still you may be a hacker.
may be it is like "once a hacker, always a hacker'
may be you are a general hacker and generalize your hacking into other things other than software.

PIONEER   : BWORK [ART] (GIMP)
VOLUNTEER : SOFTWARE TESTING 
JOB       : SOFTWARE ENGINEER (DEBIAN, GNU AND LINUX)
SPIRITUAL : BOlearn

be the software big or small, the main thing is to make it free software.
do not do typical repeated things, it may cause pressure .
Jump to other projects which my be new or an old one you have not
worked for a typical time. Do not work on the same work > 2 times.

do the kernel work (testing related to stable release)
learn new things when things come up related to your basic testing work.

(3 days veg and 3 days non-veg) per week  

may be when you do work in kernel do not try to grab all work but relax
a take the work you get in your relaxed way. do not be greedy.give work
for others to do.

greed is  problem which should be addressed.
do not try to take all the work in a community.. give others also oppurtunity to do work 

typical posts in bw project can be treated as maths solutions to problems which can be used to dig(trial and error) 
 knowledge in operating systems.

learn gimp and the supported scripting languages.
the discoveries you make may be identified by some person or a group through god. 

may be the future plan is not completely known to me, but keep hacking.
action is reuired. plans are discovered  as we move forward.

keep helping people in debian mailing lists. (for immediate effect to people)

you are a softare tester at linux kernel

you try to build knowledge on how stuff works.
learn about filesystems in the linux kernel and try to build knowledge by hacking code


__can and cannot do__

do not try to do intermediate or advanced courses in coursera
your main focus should be  education
do a lot of beginner level programming projects.
coonnect those projects and discover where you are going.
use those projects to teach students methods to  develop something
do not try to do one single softwsre and make it huge all by yourself
do frontend development.
do lot of micro projects instead of one large project.
